//Defining pins for the distance messuring code
#define echoPin_N  2								 
#define trigPin_N  3									 
#define echoPin_NW  4								 
#define trigPin_NW  5 
#define echoPin_NE  6								 
#define trigPin_NE  7
#define echoPin_W  8								 
#define trigPin_W  9
#define echoPin_E  10								 
#define trigPin_E  11


//Variables to store time taken to the pulse
long duration_N; 
long duration_NW; 
long duration_NE; 
long duration_W; 
long duration_E; 


//Variables to store distance calculated using
int distance_N;
int distance_NW; 
int distance_NE; 
int distance_W; 
int distance_E; 


//Variables to store the pins the motors are connected to
int motor1pin1 = 23;
int motor1pin2 = 24;

int motor2pin1 = 25;
int motor2pin2 = 26;

void setup() {
  
  // Setting the echo/trig pin to their respective OUTPUT/INPUT
  definePin(echoPin_N,trigPin_N);
  definePin(echoPin_NW,trigPin_NW);
  definePin(echoPin_NE,trigPin_NE);
  definePin(echoPin_W,trigPin_W);
  definePin(echoPin_E,trigPin_E);


  // Serial Communication is starting with 9600 of
  // baudrate speed
  Serial.begin(9600);

  // The text to be printed in serial monitor
  delay(500);

  // put your setup code here, to run once:
  pinMode(motor1pin1, OUTPUT);
  pinMode(motor1pin2, OUTPUT);
  pinMode(motor2pin1, OUTPUT);
  pinMode(motor2pin2, OUTPUT);

  // pins for speed control
  pinMode(40, OUTPUT); 
  pinMode(41, OUTPUT);
}

void loop() {

  //Controlling speed (0   = off and 255 = max speed):     
  analogWrite(9, 100); //ENA   pin
  analogWrite(10, 200); //ENB pin


  //prob chosing direction
  digitalWrite(motor1pin1, HIGH);
  digitalWrite(motor1pin2, LOW);

  digitalWrite(motor2pin1, HIGH);
  digitalWrite(motor2pin2, LOW);

  //i assume its how long the engines run for, prob 3000 miliseconds?
  delay(3000);

  //i assume changing direction for the other direction which we chose before.
  digitalWrite(motor1pin1, LOW);
  digitalWrite(motor1pin2, HIGH);

  digitalWrite(motor2pin1, LOW);
  digitalWrite(motor2pin2, HIGH);

  //i assume its how long the engines run for, prob 3000 miliseconds?
  delay(3000);
}

void definePin(char trig,char echo){
    pinMode(trig, OUTPUT); // Sets the trigPin as an OUTPUT
    pinMode(echo, INPUT);  // Sets the echoPin as an INPUT
}

int distanceMeasure(int echoPin,int trigPin){

    long duration; // Variable to store time taken to the pulse to reach receiver
    int distance; // Variable to store distance calculated using formula


	digitalWrite(trigPin, LOW);
	delayMicroseconds(2); // wait for 2 ms to avoid collision in serial monitor

	digitalWrite(trigPin, HIGH); // turn on the Trigger to generate pulse
	delayMicroseconds(10); // keep the trigger "ON" for 10 ms to generate pulse for 10 ms.

	digitalWrite(trigPin, LOW); // Turn off the pulse trigger to stop pulse generation

	// If pulse reached the receiver echoPin
	// become high Then pulseIn() returns the
	// time taken by the pulse to reach the
	// receiver

	duration = pulseIn(echoPin, HIGH);
	distance = duration * 0.0344 / 2; // Expression to calculate distance using time

    return distance;

}
