//Defining pins for the distance messuring code
#define echoPin_N  2								 
#define trigPin_N  3									 
#define echoPin_NW  4								 
#define trigPin_NW  5 
#define echoPin_NE  6								 
#define trigPin_NE  7
#define echoPin_W  8								 
#define trigPin_W  9
#define echoPin_E  10								 
#define trigPin_E  11


//Variables to store the pins the motors are connected to
int motor1pin1 = 23;
int motor1pin2 = 24;

int motor2pin1 = 25;
int motor2pin2 = 26;

//Variables to store the distance for each sensors
int distance_N;
int distance_NW;
int distance_NE;
int distance_W;
int distance_E;


void setup() {
    
    // Setting the echo/trig pin to their respective OUTPUT/INPUT
    definePin(echoPin_N,trigPin_N);
    definePin(echoPin_NW,trigPin_NW);
    definePin(echoPin_NE,trigPin_NE);
    definePin(echoPin_W,trigPin_W);
    definePin(echoPin_E,trigPin_E);

    int position = 0;

    // Serial Communication is starting with 9600 of
    // baudrate speed
    Serial.begin(9600);

    delay(500);

    pinMode(motor1pin1, OUTPUT);
    pinMode(motor1pin2, OUTPUT);
    pinMode(motor2pin1, OUTPUT);
    pinMode(motor2pin2, OUTPUT);

    // pins for speed control
    pinMode(40, OUTPUT); 
    pinMode(41, OUTPUT);
}

void loop() {

    distance_N = distanceMeasure(2,3);
    distance_NW = distanceMeasure(4,5);
    distance_NE = distanceMeasure(6,7);
    distance_W = distanceMeasure(8,9);
    distance_E = distanceMeasure(10,11);

    //Clockwise motion
    digitalWrite(motor1pin1, HIGH);
    digitalWrite(motor1pin2, LOW);
    digitalWrite(motor2pin1, HIGH);
    digitalWrite(motor2pin2, LOW);

    if(postion == 0){
        if(distance_N > 100){
            analogWrite(40, 250); //Making motor1 run on a relative speed of 250
            analogWrite(41, 250); //Making motor2 run on a relative speed of 250
        }

        if(distance_N < 100){
            if(distance_NE < 100 && distance_NW < 100){
                analogWrite(40, 0); //Making motor1 run on a relative speed of 250
                analogWrite(41, 0); //Making motor2 run on a relative speed of 250
                if(distance_E){
                    analogWrite(40, 250); //Making motor1 run on a relative speed of 250
                    analogWrite(41, 0); //Making motor1 run on a relative speed of 250                    
                }
                if(distance_W){
                    analogWrite(40, 0); //Making motor1 run on a relative speed of 250
                    analogWrite(41, 250); //Making motor1 run on a relative speed of 250                    
                }
            }
            if(distance_NE > 100){
                analogWrite(40, 250); //Making motor1 run on a relative speed of 250
                analogWrite(41, 100); //Making motor1 run on a relative speed of 250
                delay(5000);
                analogWrite(40, 100); //Making motor1 run on a relative speed of 250
                analogWrite(41, 250); //Making motor1 run on a relative speed of 250
                delay(5000);
                position = 1;

            }
            if(distance_NW > 100){
                analogWrite(40, 100); //Making motor1 run on a relative speed of 250
                analogWrite(41, 250); //Making motor1 run on a relative speed of 250
                delay(5000);
                analogWrite(40, 250); //Making motor1 run on a relative speed of 250
                analogWrite(41, 100); //Making motor1 run on a relative speed of 250
                delay(5000);
                position = 2;
            }
        }
    }

    if(position == 1){
        if(distance_NW > 100){
            analogWrite(40, 250); //Making motor1 run on a relative speed of 250
            analogWrite(41, 250); //Making motor1 run on a relative speed of 250
        }
        else{
            analogWrite(40, 100); //Making motor1 run on a relative speed of 250
            analogWrite(41, 250); //Making motor1 run on a relative speed of 250
            delay(5000);
            analogWrite(40, 250); //Making motor1 run on a relative speed of 250
            analogWrite(41, 100); //Making motor1 run on a relative speed of 250
            delay(5000);
            position = 0;
        }
    }
    if(position == 2){
        if(distance_NE > 100){
            analogWrite(40, 250); //Making motor1 run on a relative speed of 250
            analogWrite(41, 250); //Making motor1 run on a relative speed of 250
        }
        else{
            analogWrite(40, 250); //Making motor1 run on a relative speed of 250
            analogWrite(41, 100); //Making motor1 run on a relative speed of 250
            delay(5000);
            analogWrite(40, 100); //Making motor1 run on a relative speed of 250
            analogWrite(41, 250); //Making motor1 run on a relative speed of 250
            delay(5000);
            position = 0;
        }
    }
}

void definePin(char trig,char echo){
    pinMode(trig, OUTPUT); // Sets the trigPin as an OUTPUT
    pinMode(echo, INPUT);  // Sets the echoPin as an INPUT
}

int distanceMeasure(int echoPin,int trigPin){

    long duration; // Variable to store time taken to the pulse to reach receiver
    int distance; // Variable to store distance calculated using formula

	digitalWrite(trigPin, LOW);
	delayMicroseconds(2); // wait for 2 ms to avoid collision in serial monitor

	digitalWrite(trigPin, HIGH); // turn on the Trigger to generate pulse
	delayMicroseconds(10); // keep the trigger "ON" for 10 ms to generate pulse for 10 ms.

	digitalWrite(trigPin, LOW); // Turn off the pulse trigger to stop pulse generation

	// If pulse reached the receiver echoPin
	// become high Then pulseIn() returns the
	// time taken by the pulse to reach the
	// receiver

	duration = pulseIn(echoPin, HIGH);
	distance = duration * 0.0344 / 2; // Expression to calculate distance using time

    return distance;

}
