//Defining pins for the distance messuring code
#define echoPin_N  10								 
#define trigPin_N  9									 


//Variables to store the pins the motors are connected to
int motor1pin1 = 3;


//Variables to store the distance for each sensors
int distance_N;
int distance_NW;
int distance_NE;
int distance_W;
int distance_E;


void setup() {
    
    // Setting the echo/trig pin to their respective OUTPUT/INPUT
    definePin(echoPin_N,trigPin_N);



    // Serial Communication is starting with 9600 of
    // baudrate speed
    Serial.begin(9600);

    delay(500);

    pinMode(motor1pin1, OUTPUT);

}

void loop() {

    distance_N = distanceMeasure(10,9);

    //Clockwise motion
    while(distanceMeasure(10,9) < 10){
        digitalWrite(motor1pin1, HIGH);
    }

}

void definePin(char trig,char echo){
    pinMode(trig, OUTPUT); // Sets the trigPin as an OUTPUT
    pinMode(echo, INPUT);  // Sets the echoPin as an INPUT
}

int distanceMeasure(int echoPin,int trigPin){

    long duration; // Variable to store time taken to the pulse to reach receiver
    int distance; // Variable to store distance calculated using formula

	digitalWrite(trigPin, LOW);
	delayMicroseconds(2); // wait for 2 ms to avoid collision in serial monitor

	digitalWrite(trigPin, HIGH); // turn on the Trigger to generate pulse
	delayMicroseconds(10); // keep the trigger "ON" for 10 ms to generate pulse for 10 ms.

	digitalWrite(trigPin, LOW); // Turn off the pulse trigger to stop pulse generation

	// If pulse reached the receiver echoPin
	// become high Then pulseIn() returns the
	// time taken by the pulse to reach the
	// receiver

	duration = pulseIn(echoPin, HIGH);
	distance = duration * 0.0344 / 2; // Expression to calculate distance using time

    return distance;

}
